openapi: 3.0.3
info:
  title: WASAText API
  description: |-
    API for WASAText.
  version: 1.0.0

components:
  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message
          example: "Invalid request"
  
  responses:
    BadRequest:
      description: Invalid input parameters
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Invalid or missing authentication token
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
            
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer

tags:
  - name: login
    description: Authentication operations
  - name: user
    description: User management operations
  - name: conversations
    description: Conversation management
  - name: messages
    description: Message operations
  - name: reactions
    description: Message reactions
  - name: groups
    description: Group chat operations

paths:
  /session:
    post:
      tags: ["login"]
      summary: User login
      description: Creates a new session. Does not require authentication.
      security: []
      operationId: doLogin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  pattern: '^[a-zA-Z0-9_-]+$'
                  minLength: 3
                  maxLength: 16
                  example: "John_Cena"
              required:
                - name
      responses:
        '201':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  identifier:
                    type: string
                    format: uuid
                    example: "550e8400-e29b-41d4-a716-446655440000"
                required:
                  - identifier
        '400':
          $ref: '#/components/responses/BadRequest'

  /users/{username}:
    parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
          pattern: '^[a-zA-Z0-9_-]+$'
          minLength: 3
          maxLength: 16
          example: "John_Cena"
    put:
      tags: ["user"]
      summary: Update username
      description: Updates the authenticated user's username
      operationId: setMyUserName
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                new_name:
                  type: string
                  pattern: '^[a-zA-Z0-9_-]+$'
                  minLength: 3
                  maxLength: 16
                  example: "John_Lennon"
              required:
                - new_name
      responses:
        '200':
          description: Username updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Username successfully updated"
                  username:
                    type: string
                    example: "John_Lennon_2"
                required:
                  - message
                  - username
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /users/{username}/conversations:
    parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
          pattern: '^[a-zA-Z0-9_-]+$'
          minLength: 3
          maxLength: 16
    get:
      tags: ["conversations"]
      summary: List user conversations
      description: Returns all conversations for the authenticated user
      operationId: getMyConversations
      responses:
        '200':
          description: List of conversations
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    conversation_id:
                      type: string
                      format: uuid
                      example: "123e4567-e89b-12d3-a456-426614174000"
                    last_message:
                      type: string
                      example: "Hey, how are you?"
                    timestamp:
                      type: string
                      format: date-time
                      example: "2024-03-15T14:30:00Z"
                    participants:
                      type: array
                      items:
                        type: string
                        pattern: '^[a-zA-Z0-9_-]+$'
                      example: ["John_Lennon", "Paul_McCartney"]
                      minItems: 2
                      maxItems: 50
                  required:
                    - conversation_id
                    - participants
        '401':
          $ref: '#/components/responses/Unauthorized'

  /conversations/{conversation_id}:
    parameters:
      - name: conversation_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags: ["conversations"]
      summary: Get conversation details
      description: Returns details of a specific conversation
      operationId: getConversation
      responses:
        '200':
          description: Conversation details
          content:
            application/json:
              schema:
                type: object
                properties:
                  messages:
                    type: array
                    items:
                      type: object
                      properties:
                        message_id:
                          type: string
                          format: uuid
                        sender:
                          type: string
                          pattern: '^[a-zA-Z0-9_-]+$'
                        content:
                          type: string
                        timestamp:
                          type: string
                          format: date-time
                      required:
                        - message_id
                        - sender
                        - content
                        - timestamp
                    minItems: 0
                    maxItems: 200
                required:
                  - messages
        '401':
          $ref: '#/components/responses/Unauthorized'

  /conversations/{conversation_id}/messages:
    parameters:
      - name: conversation_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
    post:
      tags: ["messages"]
      summary: Send message
      description: Sends a new message to the conversation
      operationId: sendMessage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  minLength: 1
                  maxLength: 500
                  example: "Hello, how are you?"
              required:
                - content
      responses:
        '201':
          description: Message sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message_id:
                    type: string
                    format: uuid
                    example: "123e4567-e89b-12d3-a456-426614174000"
                required:
                  - message_id
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /conversations/{conversation_id}/messages/{message_id}:
    parameters:
      - name: conversation_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: message_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
    delete:
      tags: ["messages"]
      summary: Delete message
      description: Deletes a message from the conversation
      operationId: deleteMessage
      responses:
        '204':
          description: Message deleted successfully
        '401':
          $ref: '#/components/responses/Unauthorized'
    post:
      tags: ["messages"]
      summary: Forward message
      description: Forwards a message to another conversation
      operationId: forwardMessage
      responses:
        '201':
          description: Message forwarded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message_id:
                    type: string
                    format: uuid
                    example: "123e4567-e89b-12d3-a456-426614174000"
                required:
                  - message_id
        '401':
          $ref: '#/components/responses/Unauthorized'

  /conversations/{conversation_id}/messages/{message_id}/reactions:
    parameters:
      - name: conversation_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: message_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
    post:
      tags: ["reactions"]
      summary: Add reaction
      description: Adds a reaction to a message
      operationId: commentMessage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reaction:
                  type: string
                  minLength: 1
                  maxLength: 5
                  example: "<3"
              required:
                - reaction
      responses:
        '201':
          description: Reaction added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  reaction:
                    type: string
                    example: "<3"
                required:
                  - reaction
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
    delete:
      tags: ["reactions"]
      summary: Remove reaction
      description: Removes a reaction from a message
      operationId: uncommentMessage
      responses:
        '204':
          description: Reaction removed successfully
        '401':
          $ref: '#/components/responses/Unauthorized'

  /groups:
    post:
      tags: ["groups"]
      summary: Create group chat
      description: Creates a new group conversation
      operationId: addToGroup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  pattern: '^[a-zA-Z0-9_-]+$'
                  minLength: 3
                  maxLength: 30
                  example: "Family_Group"
                members:
                  type: array
                  items:
                    type: string
                    pattern: '^[a-zA-Z0-9_-]+$'
                  minItems: 2
                  maxItems: 50
                  example: ["John_Lennon", "George_Harrison"]
              required:
                - name
                - members
      responses:
        '201':
          description: Group created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  group_id:
                    type: string
                    format: uuid
                    example: "123e4567-e89b-12d3-a456-426614174000"
                required:
                  - group_id
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /groups/{group_id}:
    parameters:
      - name: group_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
    post:
      tags: ["groups"]
      summary: Update group name
      description: Updates the name of a group chat
      operationId: setGroupName
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                new_name:
                  type: string
                  pattern: '^[a-zA-Z0-9_-]+$'
                  minLength: 3
                  maxLength: 30
                  example: "Family_Chat"
              required:
                - new_name
      responses:
        '200':
          description: Group name updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  new_name:
                    type: string
                    example: "Updated_Family_Chat"
                required:
                  - new_name
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /groups/{group_id}/leave:
    parameters:
      - name: group_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
    post:
      tags: ["groups"]
      summary: Leave group
      description: Removes the authenticated user from a group chat
      operationId: leaveGroup
      responses:
        '204':
          description: Successfully left the group
        '401':
          $ref: '#/components/responses/Unauthorized'

  /groups/{group_id}/photo:
    parameters:
      - name: group_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
    post:
      tags: ["groups"]
      summary: Update group photo
      description: Updates the group chat photo
      operationId: setGroupPhoto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                photo_url:
                  type: string
                  format: uri
                  example: "https://example.com/photos/group.jpg"
              required:
                - photo_url
      responses:
        '200':
          description: Group photo updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  photo_url:
                    type: string
                    format: uri
                    example: "https://example.com/photos/group.jpg"
                required:
                  - photo_url
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /users/{username}/photo:
    parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
          pattern: '^[a-zA-Z0-9_-]+$'
          minLength: 3
          maxLength: 16
    post:
      tags: ["user"]
      summary: Update profile photo
      description: Updates the user's profile photo
      operationId: setMyPhoto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                photo_url:
                  type: string
                  format: uri
                  example: "https://example.com/photos/profile.jpg"
              required:
                - photo_url
      responses:
        '200':
          description: Profile photo updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  photo_url:
                    type: string
                    format: uri
                    example: "https://example.com/photos/profile.jpg"
                required:
                  - photo_url
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

security:
  - BearerAuth: []
